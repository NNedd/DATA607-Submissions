install.packages("rvest")
library(rvest)
heritage_parsed <- read_html("https://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8")
View(hertage_parsed)
View(heritage_parsed)
tables <- html_table(heritage_parsed, fill = TRUE)
tables
View(tables)
danger_table <- tables[2]
danger_table
danger_table <- danger_table <- tables[[2]]
View (danger_table)
names(danger_table)
danger_table < danger_table[, c(1,3,4,6,7)]
danger_table <- danger_table[, c(1,3,4,6,7)]
colnames(danger_table) <- c("name", "locn", "crit", "yins", "yend")
danger_table$name[1:3]
dangeer_table$crit <- ifelse(str_detect(danger_table)
library(stringr)
linrary(XML)
library(XML)
library(maps)
library(rvest)
heritage_parsed <- read_html("http://en.wikipedia.org/wiki/List_of_World_Heritage_in_Danger", encoding = "UTF-8")
tables <- html_table(heritage_parsed, fill = TRUE)
tables
danger_table <- danger_table <- tables[[2]]
names(danger_table)
danger_table < danger_table[,c(1,3,4,6,7)]
danger_table <- danger_table[,c(1,3,4,6,7)]
colnames(danger_table) <- c("name", "locn", "crit", "yins", "yend")
danger_table$name[1:3]
danger_table$crit <- ifelse(str_detect(danger_table$crit, "Natural") == TRUE, "nat", "cult")
danger_table$crit[1:3]
danger_table$yins <- as.numeric(danger_table$yins)
danger_table$yins[1:3]
yend_clean <- unlist(str_extract_all(danger_table$yend, "[[:digit:]]4$"))
danger_table$yend <- as.numeric(yend_clean)
danger_table$yend[1:3]
danger_table$yend <- as.numeric(yend_clean)
yend_clean <- unlist(str_extract_all(danger_table$yend, "[[:digit:]]{4}$"))
danger_table$yend <- as.numeric(yend_clean)
yend_clean <- unlist(str_extract_all(danger_table$yend, "[[:digit:]]{4}$"))
danger_table$yend <- as.numeric(yend_clean)
install.packages("tidyr")
url <- "http://www.r-datacollection.com/materials/html/fortunes.html"
fortunes <- readLines(con = url)
url <- "http://www.r-datacollection.com/materials/html/fortunes.html"
fortunes <- readLines(con = url)
#Parsing the Code using htmlParse
library(XML)
parsed_fortunes <- htmlParse(file = url)
print(parsed_fortunes)
#Using a handler function for discarding the <body> node and its children
h1 <- list("body" = function(x){NULL})
parsed_fortunes <- htmlTreeParse(url, handlers = h1, asTree = TRUE)
parsed_fortunes$children
h2 <- list(
startElement = function(node, ...){
name <- xmlName(node)
if(name %in% c("div", "title")){NULL}else{node}
},
comment = function(node){NULL}
)
parsed_fortunes <- htmlTreeParse(file = url, handlers = h2, asTree = TRUE)
parsed_fortunes$children
getItalics = function() {
i_container = character()
list(i = function(node, ...){
i_container <<- c(i_container, xmlValue(node))
},
returnI = function() i_container)
}
#Instantiating an instance of the handler
h3 <- getItalics()
#Executing the parsing with the instatiated handler and printing the returned data
invisible(htmlTreeParse(url, handlers = h3))
h3$returnI()
install.packages("rtimes")
install.packages("prettydoc")
libary(jsonlite)
library(jsonlite)
?fromJSON
knitr::opts_chunk$set(echo = TRUE)
if("jsonlite" %in% rownames(installed.packages()) == FALSE) {install.packages("jsonlite")}
library(jsonlite)
NYT_url <- "https://api.nytimes.com/svc/movies/v2/reviews/all.json?api-key=fdfd28b541314f5793618f60cefbd084"
bookData <- fromJSON(NYT_url)
bookData$results
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?api-key=fdfd28b541314f5793618f60cefbd084"
bookData <- fromJSON(NYT_url)
bookData$results
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?api-key=fdfd28b541314f5793618f60cefbd084"
allData <- fromJSON(NYT_url)
bookData <- names(flatten(allData$results))
bookData
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?api-key=fdfd28b541314f5793618f60cefbd084"
allData <- fromJSON(NYT_url)
bookData <- flatten(allData$results)
View(bookData)
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?api-key=fdfd28b541314f5793618f60cefbd084"
allData <- fromJSON(NYT_url, flatten = TRUE)
#bookData <- flatten(allData$results)
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?api-key=fdfd28b541314f5793618f60cefbd084"
allData <- fromJSON(NYT_url)
bookData <- flatten(allData$results)
View(bookData)
unlist(bookData$ranks_history)
unlist(bookData[['ranks_history']])
load.packages("unnest")
load.packages(tidyr)
load.packages("tidyr")
install.packages("tidyr")
library(tidyr)
unnest(bookData)
?unnest
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
allData <- fromJSON(NYT_url)
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
pagenum <- 1
allData <- fromJSON(NYT_url)
paste(NYT_url, "offset=",pagenum,"&api-key=",API_Key)
paste(NYT_url, "offset=",pagenum,"&api-key=",API_Key, sep="")
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
for (i in 1:10)
{
paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep="")
pageData <- fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
allData <- cbind(allData, pageData)
}
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
for (i in 1:10)
{
pageData <- fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
allData <- cbind(allData, pageData)
}
pageData <- fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep="")
fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
for (i in seq(0,1000, by = 20))
{
pageData <- fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
allData <- cbind(allData, pageData)
}
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
for (i in seq(0,100, by = 20))
{
pageData <- fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
allData <- rbind(allData, pageData)
}
allData <- fromJSON(NYT_url)
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
for (i in seq(0,100, by = 20))
{
pageData <- fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
allData <- rbind(allData, pageData)
}
bookData <- flatten(allData$results)
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
for (i in seq(0,100, by = 20))
{
pageData <- fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
allData <- rbind(allData, pageData$results)
}
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
allData <- data.frame()
for (i in seq(0,100, by = 20))
{
pageData <- fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
allData <- rbind(allData, pageData$results)
}
#bookData <- flatten(allData$results)
View(allData)
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
allData <- data.frame()
for (i in seq(0,1000, by = 20))
{
pageData <- fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
allData <- rbind(allData, pageData$results)
}
#bookData <- flatten(allData$results)
View(allData)
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
allData <- data.frame()
for (i in seq(0,30494, by = 20))
{
pageData <- fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
allData <- rbind(allData, pageData$results)
}
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
allData <- data.frame()
for (i in seq(0,1000, by = 20))
{
pageData <- fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
allData <- rbind(allData, pageData$results)
}
#bookData <- flatten(allData$results)
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/names.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
namesRaw <- fromJSON(paste(NYT_url, "api-key=",API_Key, sep=""))
# allData <- data.frame()
# for (i in seq(0,1000, by = 20))
# {
#   pageData <- fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
#   allData <- rbind(allData, pageData$results)
# }
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/names.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
namesRaw <- fromJSON(paste(NYT_url, "api-key=",API_Key, sep=""))
# allData <- data.frame()
# for (i in seq(0,1000, by = 20))
# {
#   pageData <- fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
#   allData <- rbind(allData, pageData$results)
# }
namesData <- namesRaw$results
View(namesData)
library(dplyr)
library(stringr)
knitr::opts_chunk$set(echo = TRUE)
if("jsonlite" %in% rownames(installed.packages()) == FALSE) {install.packages("jsonlite")}
library(jsonlite)
if("dplyr" %in% rownames(installed.packages()) == FALSE) {install.packages("dplyr")}
library(dplyr)
fictionNames <- filter(namesData, str_detect(namesData$list_name_encoded, "fiction")
fictionNames <- filter(namesData, str_detect(namesData$list_name_encoded, "fiction"))
View(fictionNames)
fictionNames <- filter(namesData, str_detect(namesData$list_name_encoded, "[fiction][^non]"))
fictionNames <- filter(namesData, str_detect(namesData$list_name_encoded, "[fiction^non]"))
fictionNames <- filter(namesData, str_detect(namesData$list_name_encoded, "[fiction]&[^non"))
fictionNames <- filter(namesData, str_detect(namesData$list_name_encoded, "[fiction]&[^non]"))
fictionNames <- filter(namesData, str_detect(namesData$list_name_encoded, "[fiction]"))
fictionNames <- filter(namesData, str_detect(namesData$list_name_encoded, "[-fiction]"))
fictionNames <- filter(namesData, str_detect(namesData$list_name_encoded, "[-fiction]"))
fictionNames <- filter(namesData, str_detect(namesData$list_name_encoded, "[-fiction$]"))
fictionNames <- filter(namesData, str_detect(namesData$list_name_encoded, "-fiction"))
fictionNames <- filter(namesData, str_detect(namesData$display_name, "Fiction"))
length(fictionNames)
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
allData <- data.frame()
for(i in 1:length(fictionNames)){
pageData <- fromJSON(paste(NYT_url, "&api-key=",API_Key, "&list=",fictionNames[i]$list_name_encoded,sep=""))
allData <- rbind(allData, pageData$results)
}
fictionNames[1]$list_name_encoded
fictionNames[2]$list_name_encoded
fictionNames$list_name_encoded[1]
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/best-sellers/history.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
allData <- data.frame()
for(i in 1:length(fictionNames)){
pageData <- fromJSON(paste(NYT_url, "&api-key=",API_Key, "&list=",fictionNames$list_name_encoded[i],sep=""))
allData <- rbind(allData, pageData$results)
}
fictionNames[3,1]
fictionNames[1,3]
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
allData <- data.frame()
for(i in 1:length(fictionNames)){
pageData <- fromJSON(paste(NYT_url, "&api-key=",API_Key, "&list=",fictionNames$list_name_encoded[i],sep= ""))
allData <- rbind(allData, pageData$results)
}
#bookData <- flatten(allData$results)
View(allData)
knitr::opts_chunk$set(echo = TRUE)
if("jsonlite" %in% rownames(installed.packages()) == FALSE) {install.packages("jsonlite")}
library(jsonlite)
if("dplyr" %in% rownames(installed.packages()) == FALSE) {install.packages("dplyr")}
library(dplyr)
if("stringr" %in% rownames(installed.packages()) == FALSE) {install.packages("stringr")}
library(stringr)
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
allData <- data.frame()
for(i in 1:length(fictionNames)){
pageData <- fromJSON(paste(NYT_url, "&api-key=",API_Key, "&list=",fictionNames$list_name_encoded[i],sep= ""), simplifyDataFrame = TRUE)
allData <- rbind(allData, pageData$results)
}
#bookData <- flatten(allData$results)
View(allData)
allData$isbns
allData$book_details
tester <- allData$book_details
tester
str(tester)
tester[1]
tester1 <- tester1
tester1 <- tester[1]
as.data.frame(tester1)
tester1a  <- as.data.frame(tester1)
View(tester1a)
tester2 <- as.data.frame(allData$book_details[1])
View(tester2)
tester2 <- as.data.frame(allData$book_details)
View(tester2)
for(i in 1:length(allData)){
detailsData <- data.frame()
detailsData[i] <- as.data.frame(allData$book_details[i])
}
length(allData)
length(allData)
allData[1]
nrow(allData)
for(i in 1:nrow(allData)){
detailsData <- data.frame()
detailsData[i] <- as.data.frame(allData$book_details[i])
}
?as.data.frame
tester2 <- as.data.frame(allData$book_details[2])
tester2 <- as.data.frame(allData$book_details[13])
tester2 <- as.data.frame(allData$book_details[40])
for(i in 1:nrow(allData)){
detailsData <- data.frame()
detailsData[i] <- as.data.frame(allData$book_details[i])
}
tester2 <- as.data.frame(allData$book_details[2])
tester2[2] <- as.data.frame(allData$book_details[2])
for(i in 1:nrow(allData)){
detailsData <- data.frame()
detailsData <- rbind(detailsData,as.data.frame(allData$book_details[i]))
}
for(i in 1:nrow(allData)){
detailsData <- data.frame()
detailsData <- rbind(detailsData,as.data.frame(allData$book_details[i]))
}
for(i in 1:nrow(allData)){
detailsData <- data.frame()
detailsData <- rbind(detailsData,as.data.frame(allData$book_details[i]))
}
for(i in 1:nrow(allData)){
detailsData <- data.frame()
detailsData <- rbind(detailsData,as.data.frame(allData$book_details[i]))
}
detailsData <- data.frame()
for(i in 1:nrow(allData)){
detailsData <- rbind(detailsData,as.data.frame(allData$book_details[i]))
}
View(detailsData)
detailsData <- data.frame()
for(i in 1:nrow(allData)){
detailsData <- rbind(detailsData,as.data.frame(allData$book_details[i]))
}
head(detailsData)
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
allData <- data.frame()
for(i in 1:nrow(fictionNames)){
pageData <- fromJSON(paste(NYT_url, "&api-key=",API_Key, "&list=",fictionNames$list_name_encoded[i],sep= ""), simplifyDataFrame = TRUE)
allData <- rbind(allData, pageData$results)
}
head(allData)
NYT_url <- "https://api.nytimes.com/svc/books/v3/lists/names.json?"
API_Key <- "fdfd28b541314f5793618f60cefbd084"
namesRaw <- fromJSON(paste(NYT_url, "api-key=",API_Key, sep=""))
# allData <- data.frame()
# for (i in seq(0,1000, by = 20))
# {
#   pageData <- fromJSON(paste(NYT_url, "offset=",i,"&api-key=",API_Key, sep=""))
#   allData <- rbind(allData, pageData$results)
# }
namesData <- namesRaw$results
head(namesData)
bookData <- cbind(allData, detailsData)
View(bookData)
bookData <- cbind(allData, detailsData)
analyseData <- select(bookData, title, author, publisher, rank, weeks_on_list)
bookData <- cbind(allData, detailsData)
analyseData <- select(bookData, title, author, publisher, rank, weeks_on_list)
head(analyseData)
analyseData_weeks <- arrange(analyseData, desc(weeks_on_list))
View(analyseData_weeks)
analyseData_weeks[1:15]
analyseData_weeks[,1:15]
analyseData_weeks[1:15,]
analyseData_weeks <- arrange(analyseData, desc(weeks_on_list))
top_15 <- analyseData_weeks[1:15,]
analyseData_weeks <- arrange(analyseData, desc(weeks_on_list))
top_15 <- analyseData_weeks[1:15,]
ggplot(top_15, aes(title,weeks_on_list)) + geom_bar(stat=identity)
library(ggplot2)
analyseData_weeks <- arrange(analyseData, desc(weeks_on_list))
top_15 <- analyseData_weeks[1:15,]
ggplot(top_15, aes(title,weeks_on_list)) + geom_bar(stat=identity)
analyseData_weeks <- arrange(analyseData, desc(weeks_on_list))
top_15 <- analyseData_weeks[1:15,]
ggplot(top_15, aes(title,weeks_on_list)) + geom_bar(stat="identity")
analyseData_weeks <- arrange(analyseData, desc(weeks_on_list))
top_15 <- analyseData_weeks[1:15,]
ggplot(top_15, aes(title,weeks_on_list)) + geom_bar(stat="identity") +theme(axis.text.x = element_text(angle = 90, hjust = 1)
analyseData_weeks <- arrange(analyseData, desc(weeks_on_list))
top_15 <- analyseData_weeks[1:15,]
ggplot(top_15, aes(title,weeks_on_list)) + geom_bar(stat="identity") +theme(axis.text.x = element_text(angle = 90, hjust = 1))
analyseData_weeks <- arrange(analyseData, desc(weeks_on_list))
top_15 <- analyseData_weeks[1:15,]
ggplot(top_15, aes(title,weeks_on_list)) + geom_bar(stat="identity") +theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
analyseData_weeks <- arrange(analyseData, desc(weeks_on_list))
top_15 <- analyseData_weeks[1:10,]
ggplot(top_15, aes(title,weeks_on_list)) + geom_bar(stat="identity") +theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
analyseData_weeks <- arrange(analyseData, desc(weeks_on_list))
top_15 <- analyseData_weeks[1:5,]
ggplot(top_15, aes(title,weeks_on_list)) + geom_bar(stat="identity") +theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
View(top_15)
library(rtimes)
knitr::opts_chunk$set(echo = TRUE)
if("jsonlite" %in% rownames(installed.packages()) == FALSE) {install.packages("jsonlite")}
library(jsonlite)
if("dplyr" %in% rownames(installed.packages()) == FALSE) {install.packages("dplyr")}
library(dplyr)
if("stringr" %in% rownames(installed.packages()) == FALSE) {install.packages("stringr")}
library(stringr)
if("ggplot2" %in% rownames(installed.packages()) == FALSE) {install.packages("ggplot2")}
library(ggplot2)
if("rtimes" %in% rownames(installed.packages()) == FALSE) {install.packages("rtimes")}
library(rtimes)
Guy_articles <- as_search(q="Guyana",begin_date='20170101',end_date='20170331')
?as_search
Guy_articles <- as_search(q="Guyana",begin_date='20170101',end_date='20170331',key=API_Key)
Guy_articles <- as_search(q="Guyana",begin_date='20170101',end_date='20170331',key=API_Key)
Guy_articles$meta
GuyData <- Guy_articles$Data
GuyData <- Guy_articles$data
GuyData
GuyData <- as.data.frame(Guy_articles$data)
GuyData
GuyData[1]
tester1 <- as.data.frame[GuyData]
tester1 <- as.data.frame(GuyData[1])
tester1 <- as.data.frame(unclass(GuyData[1]))
unclass(GuyData)
Guy_articles <- as_search(q="Guyana",begin_date='20160101',end_date='20161231',key=API_Key)
Guy_articles$meta
Guy_articles <- as_search(q="Guyana",begin_date='20150101',end_date='20151231',key=API_Key)
Guy_articles$meta
Guy_articles <- as_search(q="Guyana",begin_date='20140101',end_date='20141231',key=API_Key)
Guy_articles$meta
Guy_articles <- as_search(q="Guyana",begin_date='20130101',end_date='20131231',key=API_Key)
Guy_articles$meta
Guy_articles <- as_search(q="Guyana",begin_date='20120101',end_date='20121231',key=API_Key)
Guy_articles$meta
Guy_articles <- as_search(q="Guyana",begin_date='20170101',end_date='20170331',key=API_Key)
Guy_articles$meta
?unclass
guy_article2 < unclass(Guy_articles)
guy_article2 <- data.frame()
guy_article2 < unclass(Guy_articles$data)
guy_article2 <- data.frame()
guy_article2 < unclass(Guy_articles$data[1])
guy_article2 <- list()
guy_article2 < unclass(Guy_articles$data[1])
guy_article2 <- list()
guy_article2 < unclass(Guy_articles$data)
Guy_articles$data[[1]]
tester1 <- Guy_articles$data[[1]]
tester1$blog
tester1$multimedia
str(tester1)
Guy_articles <- as_search(q="Guyana",begin_date='20170101',end_date='20170331',key=API_Key)
Guy_articles$meta
Guy_articles$data[[1]]
Guy_articles <- as_search(q="Guyana",begin_date='20170101',end_date='20170331',key=API_Key)
Guy_articles$meta
Guy_articles$data[1:3]
Guy_articles <- as_search(q="best+seller",begin_date='20170101',end_date='20170331',key=API_Key)
Guy_articles$meta
Guy_articles$data[1:3]
Guy_articles <- as_search(q="best+seller+fiction",begin_date='20170101',end_date='20170331',key=API_Key)
Guy_articles$meta
Guy_articles$data[1:3]
Guy_articles <- as_search(q="best+seller+fiction",begin_date='20170101',end_date='20170331',key=API_Key)
Guy_articles$meta
Guy_articles$data[1:5]
Guy_articles <- as_search(q="best+seller+fiction",begin_date='20170101',end_date='20170331',key=API_Key)
Guy_articles$meta
Guy_articles$data[1:3]
?as_search
install.packages("rmdformats")
install.packages("rmdformats")
setwd("~/CUNY/DATA607-Submissions/Graph Database Assignment")
knitr::opts_chunk$set(echo = TRUE)
if("RMySQL" %in% rownames(installed.packages()) == FALSE) {install.packages("RMySQL")}
library(RMySQL)
ratingsdb = dbConnect(MySQL(), user='data607nn', password='password', dbname='data607Assignment2nn', host='localhost')
ratingsdb = dbConnect(MySQL(), user='data607nn', password='password', dbname='data607Assignment2nn', host='localhost')
MoviesTable <- dbGetQuery(ratingsdb, "SELECT * FROM Movies;")
View(MoviesTable)
MoviesTable <- dbGetQuery(ratingsdb, "SELECT * FROM Movies;")
ReviewersTable <- dbGetQuery(ratingsdb, "SELECT * FROM Reviewers")
MoviesTable <- dbGetQuery(ratingsdb, "SELECT * FROM Movies;")
write.csv(MoviesTable, file="movies.csv")
ReviewersTable <- dbGetQuery(ratingsdb, "SELECT * FROM Reviewers")
MoviesTable <- dbGetQuery(ratingsdb, "SELECT * FROM Movies;")
write.csv(MoviesTable, file="movies.csv")
ReviewersTable <- dbGetQuery(ratingsdb, "SELECT * FROM Reviewers")
write.csv(ReviewersTable, file="reviewers.csv")
RatingsTable <- dbGetQuery(ratingsdb, "SELECT * FROM Ratings")
write.csv(RatingsTable, file="ratings.csv")
View(ReviewersTable)
